// Generated by view binder compiler. Do not edit!
package com.example.convertapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.convertapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdmincontrolBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout Category;

  @NonNull
  public final ConstraintLayout chart;

  @NonNull
  public final ConstraintLayout product;

  @NonNull
  public final ConstraintLayout report;

  @NonNull
  public final TextView textView10;

  private ActivityAdmincontrolBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout Category, @NonNull ConstraintLayout chart,
      @NonNull ConstraintLayout product, @NonNull ConstraintLayout report,
      @NonNull TextView textView10) {
    this.rootView = rootView;
    this.Category = Category;
    this.chart = chart;
    this.product = product;
    this.report = report;
    this.textView10 = textView10;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdmincontrolBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdmincontrolBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admincontrol, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdmincontrolBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Category;
      ConstraintLayout Category = ViewBindings.findChildViewById(rootView, id);
      if (Category == null) {
        break missingId;
      }

      id = R.id.chart;
      ConstraintLayout chart = ViewBindings.findChildViewById(rootView, id);
      if (chart == null) {
        break missingId;
      }

      id = R.id.product;
      ConstraintLayout product = ViewBindings.findChildViewById(rootView, id);
      if (product == null) {
        break missingId;
      }

      id = R.id.report;
      ConstraintLayout report = ViewBindings.findChildViewById(rootView, id);
      if (report == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      return new ActivityAdmincontrolBinding((ConstraintLayout) rootView, Category, chart, product,
          report, textView10);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
