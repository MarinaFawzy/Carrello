// Generated by view binder compiler. Do not edit!
package com.example.convertapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.convertapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateproductBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText ecartid;

  @NonNull
  public final EditText eprice;

  @NonNull
  public final EditText equantity;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final EditText nameedit;

  @NonNull
  public final Button show;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final Button updates;

  private ActivityUpdateproductBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText ecartid, @NonNull EditText eprice, @NonNull EditText equantity,
      @NonNull ImageView imageView, @NonNull EditText nameedit, @NonNull Button show,
      @NonNull TextView textView4, @NonNull Button updates) {
    this.rootView = rootView;
    this.ecartid = ecartid;
    this.eprice = eprice;
    this.equantity = equantity;
    this.imageView = imageView;
    this.nameedit = nameedit;
    this.show = show;
    this.textView4 = textView4;
    this.updates = updates;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateproductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateproductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_updateproduct, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateproductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ecartid;
      EditText ecartid = ViewBindings.findChildViewById(rootView, id);
      if (ecartid == null) {
        break missingId;
      }

      id = R.id.eprice;
      EditText eprice = ViewBindings.findChildViewById(rootView, id);
      if (eprice == null) {
        break missingId;
      }

      id = R.id.equantity;
      EditText equantity = ViewBindings.findChildViewById(rootView, id);
      if (equantity == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.nameedit;
      EditText nameedit = ViewBindings.findChildViewById(rootView, id);
      if (nameedit == null) {
        break missingId;
      }

      id = R.id.show;
      Button show = ViewBindings.findChildViewById(rootView, id);
      if (show == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.updates;
      Button updates = ViewBindings.findChildViewById(rootView, id);
      if (updates == null) {
        break missingId;
      }

      return new ActivityUpdateproductBinding((ConstraintLayout) rootView, ecartid, eprice,
          equantity, imageView, nameedit, show, textView4, updates);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
